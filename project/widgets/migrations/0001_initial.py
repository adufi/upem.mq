# Generated by Django 2.2.19 on 2021-05-27 19:29

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import modelcluster.fields
import wagtail.core.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailimages', '0023_add_choose_permissions'),
        ('wagtaildocs', '0012_uploadeddocument'),
        ('wagtailcore', '0060_fix_workflow_unique_constraint'),
    ]

    operations = [
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('title', models.CharField(default='', max_length=120)),
                ('content', wagtail.core.fields.RichTextField(default='', max_length=250)),
                ('date_start', models.DateTimeField(verbose_name='Date de publication')),
                ('date_end', models.DateTimeField(verbose_name='Date de fin')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('type', models.CharField(choices=[('info', 'Information (Bleu)'), ('danger', 'Important (Rouge)'), ('success', 'Succès (Vert)'), ('warning', 'Attention (Jaune)')], default='', max_length=50)),
            ],
            options={
                'verbose_name': 'Alerte',
                'ordering': ['date_start'],
            },
        ),
        migrations.CreateModel(
            name='AlertsIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'verbose_name': 'Alertes: Page Index',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prefix', models.CharField(blank=True, choices=[('', 'Aucun'), ('M. ', 'Monsieur'), ('Mme. ', 'Madame'), ('Mlle. ', 'Mademoiselle')], max_length=120, verbose_name='Préfixe')),
                ('last_name', models.CharField(max_length=120, verbose_name='Nom')),
                ('first_name', models.CharField(max_length=120, verbose_name='Prénom')),
                ('type', models.CharField(blank=True, choices=[('', 'Aucun'), ('DIR.ANIM.', 'Directeur ACM'), ('DIR.F.ANIM.', 'Directrice Animation'), ('ANIM.M', 'Animateur ACM'), ('ANIM.F', 'Animatrice'), ('OFFICE', 'Employé Administratif')], max_length=120)),
                ('grades', models.CharField(blank=True, default='', max_length=120, verbose_name='Diplômes (BAFA/BPJEPS)')),
                ('qualifications', models.CharField(blank=True, default='', max_length=120, verbose_name='Qualifications (PSC1/BTS)')),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(default='', verbose_name='Nom')),
                ('label', models.TextField(default='', verbose_name='Nom aternatif')),
                ('email', models.EmailField(blank=True, default='', max_length=254)),
                ('caption', wagtail.core.fields.RichTextField(blank=True, max_length=250, verbose_name='Court texte')),
                ('city', models.CharField(blank=True, default='', max_length=125, verbose_name='Ville')),
                ('zip_code', models.CharField(blank=True, default='', max_length=10, verbose_name='Code postal')),
                ('address_1', models.CharField(blank=True, default='', max_length=255, verbose_name='Adresse ligne 1')),
                ('address_2', models.CharField(blank=True, default='', max_length=255, verbose_name='Adresse ligne 2')),
                ('phone_fax', models.CharField(blank=True, default='', max_length=20, verbose_name='Téléphone fax')),
                ('phone_cell', models.CharField(blank=True, default='', max_length=20, verbose_name='Téléphone portable')),
                ('phone_home', models.CharField(blank=True, default='', max_length=20, verbose_name='Téléphone fixe')),
                ('latitude', models.FloatField(blank=True, default=0)),
                ('longitude', models.FloatField(blank=True, default=0)),
            ],
            options={
                'verbose_name_plural': 'Lieu',
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_director', models.CharField(blank=True, default='', max_length=240, verbose_name='Directeur Ecole (Nom Complet)')),
                ('total_classrooms', models.IntegerField(blank=True, default=0, verbose_name='Nbrs classes')),
                ('total_classmates', models.IntegerField(blank=True, default=0, verbose_name='Nbrs enfants')),
                ('directory_link', models.URLField(blank=True, default='', verbose_name="Lien Annuaire de l'Education")),
                ('program_theme', models.CharField(blank=True, default='', max_length=120, verbose_name='Thème')),
                ('program_start', models.CharField(blank=True, default='', max_length=120, verbose_name='Date début')),
                ('program_end', models.CharField(blank=True, default='', max_length=120, verbose_name='Date fin')),
                ('program_duration', models.CharField(blank=True, default='', max_length=120, verbose_name='Durée')),
                ('total_employees', models.IntegerField(blank=True, default=0, verbose_name='Nbrs employés')),
                ('anim_director', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='anim_director', to='widgets.Employee')),
                ('place', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='place', to='widgets.Place')),
                ('program_planning', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document', verbose_name="Planning d'activité")),
                ('program_project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document', verbose_name='Project pédagogique (privé)')),
                ('program_project_summary', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document', verbose_name='Résumé project pédagogique')),
            ],
            options={
                'verbose_name': 'Ecole',
                'verbose_name_plural': 'Ecoles',
            },
        ),
        migrations.CreateModel(
            name='PlaceGalleryImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('caption', wagtail.core.fields.RichTextField(blank=True, max_length=250, verbose_name='Texte court')),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailimages.Image')),
                ('place', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery_images', to='widgets.Place')),
            ],
            options={
                'verbose_name': 'Lieu',
                'verbose_name_plural': 'Lieux',
            },
        ),
        migrations.CreateModel(
            name='IconBox',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('title', models.CharField(default='', max_length=120, verbose_name='Titre')),
                ('content', wagtail.core.fields.RichTextField(default='', max_length=250, verbose_name='Contenu')),
                ('link', models.CharField(blank=True, default='', max_length=255, verbose_name='Lien')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='image', to='wagtailimages.Image')),
            ],
            options={
                'verbose_name': 'Icon Box 1',
                'verbose_name_plural': 'Icon Box 1',
            },
        ),
    ]
